//📈⚙️ OPTIMIZATION: ->  optimization related // PERF:
// ⚠️ NEED_OPTIMIZATION
// ⚠️ DEPRECATED: 
// 🟢    ->  new section
// 🔵    ->  new feature ..
// 🚧    ->  under construction .. 
// TODO  ->  self explanatory
// TODO : MUST ->  self explanatory
// TODO : DONE
// TODO: 
// TODO : MUST : NEED_TO_TEST
// INFO :  self explanatory
// 🧱💪 ->  Robust System -> 
// 🆗   ->  Ok System 
// 📝   -> description
// 🥇   -> base codebase
// ⏳⌛ -> time related
// 🎨   -> GUIDE FOR FRONTEND 
// 📝   -> flow
// 💎✨🔍 -> V2 Found
// 🧩      -> piece that connects to something
// 🔗➡️  fileName -> functionName
// 🧠      -> Need to Think About In Future
// 🔍      -> need to check this code
// ⚔️💪🏔️ -> problem solving 
// ⭕      -> not needed this function
// 🧹♻️   -> move to service 
// 🔁      -> re check for learning 
// 🎲📊📈 -> calculation
// 🧪      -> FOR_TESTING --- this is for testing.. remove this and add actual code 
// 🆕      -> New Flow Alert

// =============================================
// 
// =============================================

-------------------------

(Module) fix : Commit Message
(Module) feat : Commit Message
(Module) :wrench:  Commit Message  <chore>
(Module) :hammer:   or :recycle: Commit Message <refactor>

:zap: ⚡ -> performance improvement with refactoring  <perf>
:broom: -> clean up

:memo: -> documentation only    <chore>

:wrench: -> config   <chore>

:fire: -> remove code    <chore>

:construction: -> work in progress

Ask AI :: 
this is my coding structure .. is my coding standard ? rate my way of coding out of 10 ..

git status
git diff --stat
git diff --shortstat
git diff --numstat | awk '{inserted+=$1} END {print inserted}'


